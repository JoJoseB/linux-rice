#      _               _                   
#  ___| |__   __ _  __| | _____      _____ 
# / __| '_ \ / _` |/ _` |/ _ \ \ /\ / / __|
# \__ \ | | | (_| | (_| | (_) \ V  V /\__ \
# |___/_| |_|\__,_|\__,_|\___/ \_/\_/ |___/
#
shadow = false;
shadow-radius = 9;
shadow-opacity = .25
shadow-offset-x = -7;
shadow-offset-y = -7;
shadow-exclude = [
  "_GTK_FRAME_EXTENTS@:c",
  "class_g = 'Conky'",
  "name *= 'gromit-mpx'",
  "name = 'Notification'",
  "window_type *= 'dock'"
];
crop-shadow-to-monitor = false

#   __           _      
#  / _| __ _  __| | ___ 
# | |_ / _` |/ _` |/ _ \
# |  _| (_| | (_| |  __/
# |_|  \__,_|\__,_|\___|
#
# may be causing problem
fade-delta = 10
fade-in-step = 0.03;
fade-out-step = 0.03;
fading = true;
no-fading-destroyed-argb = false
no-fading-openclose = false
# fade-exclude = []

#                         _ _         
#   ___  _ __   __ _  ___(_) |_ _   _ 
#  / _ \| '_ \ / _` |/ __| | __| | | |
# | (_) | |_) | (_| | (__| | |_| |_| |
#  \___/| .__/ \__,_|\___|_|\__|\__, |
#       |_|                     |___/ 
#
active-opacity = 1.0
inactive-opacity = 1.0;
frame-opacity = 1.0;
inactive-opacity-override = false;
inactive-dim = 0.0
# inactive-dim-fixed = 1.0
# focus-exclude = [ "class_g = 'Cairo-clock'" ];
opacity-rule = [
	"90:class_g *= 'conky'",
	"90:class_g *= 'dmenu'"
];

                                    
#   ___ ___  _ __ _ __   ___ _ __ ___ 
#  / __/ _ \| '__| '_ \ / _ \ '__/ __|
# | (_| (_) | |  | | | |  __/ |  \__ \
#  \___\___/|_|  |_| |_|\___|_|  |___/
# 
corner-radius = 15
rounded-corners-exclude = [
  "_NET_WM_STATE@[*]:a = '_NET_WM_STATE_FULLSCREEN'",
  "window_type = 'dock'",
  "window_type = 'notification'",
  "window_type = 'desktop'",
  "class_g = 'dmenu'",
  "class_g = 'polybar'",
];

#  _     _            
# | |__ | |_   _ _ __ 
# | '_ \| | | | | '__|
# | |_) | | |_| | |   
# |_.__/|_|\__,_|_|
#
#blur:
#{
#	method: "gaussian";
#	size = 10;
#	deviation = 5.0;
#}
#
#blur-background-exclude = [
#  "window_type = 'dock'",
#  "window_type = 'desktop'",
#  "_GTK_FRAME_EXTENTS@:c"
#];

#                                  _ 
#   __ _  ___ _ __   ___ _ __ __ _| |
#  / _` |/ _ \ '_ \ / _ \ '__/ _` | |
# | (_| |  __/ | | |  __/ | | (_| | |
#  \__, |\___|_| |_|\___|_|  \__,_|_|
#  |___/                             
# 
#  `xrender`, `glx`, `egl` or `xr_glx_hybrid`.
#  - GLX is an OpenGL window-system API for X11.
#  - EGL is a platform-agnostic OpenGL/GLES window-system API.
#  Though "window-system" is the best term to describe the role 
#  that both GLX and EGL play, EGL's functionality is more 
#  broad than servicing programs that target a windowing system. 
#  EGL can be also used to target lower level "headless rendering" 
#  platforms such as the DRM itself, which is necessary for 
#  Wayland compositors to function.
#
backend = "egl";
daemon = false
dbus = false
detect-client-leader = false
detect-client-opacity = true;
detect-rounded-corners = true;
detect-transient = true;
dithered-present = false;
glx-no-rebind-pixmap = true
glx-no-stencil = true
mark-ovredir-focused = true;
mark-wmwin-focused = true;
no-ewmh-fullscreen = true;
unredir-if-possible = false
use-damage = true;
use-ewmh-active-win = false;
vsync = true;
log-level = "warn";
show-all-xerrors = true

# 'WINDOW_TYPE' is one of the 15 window types defined in EWMH standard:
#     "unknown", "desktop", "dock", "toolbar", "menu", "utility",
#     "splash", "dialog", "normal", "dropdown_menu", "popup_menu",
#     "tooltip", "notification", "combo", and "dnd".
#
# Following per window-type options are available: ::
#
#   fade, shadow:::
#     Controls window-type-specific shadow and fade settings.
#
#   opacity:::
#     Controls default opacity of the window type.
#
#   focus:::
#     Controls whether the window of this type is to be always considered focused.
#     (By default, all window types except "normal" and "dialog" has this on.)
#
#   full-shadow:::
#     Controls whether shadow is drawn under the parts of the window that you
#     normally won't be able to see. Useful when the window has parts of it
#     transparent, and you want shadows in those areas.
#
#   clip-shadow-above:::
#     Controls whether shadows that would have been drawn above the window should
#     be clipped. Useful for dock windows that should have no shadow painted on top.
#
#   redir-ignore:::
#     Controls whether this type of windows should cause screen to become
#     redirected again after been unredirected. If you have unredir-if-possible
#     set, and doesn't want certain window to cause unnecessary screen redirection,
#     you can set this to `true`.
#
wintypes:
{
  tooltip = { fade = true; shadow = false; opacity = 0.75; focus = true; full-shadow = false; };
  dock = { shadow = false; };
  dnd = { shadow = false; };
  popup_menu = { opacity = 1.0; };
  dropdown_menu = { opacity = 1.0; };
};

